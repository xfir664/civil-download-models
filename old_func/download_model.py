import os
import requests
from urllib.parse import urlparse

def download_model(all_elems, driver, download_path):
    """
    –°–∫–∞—á–∏–≤–∞–µ—Ç –º–æ–¥–µ–ª—å —á–µ—Ä–µ–∑ requests, –∏—Å–ø–æ–ª—å–∑—É—è –∫—É–∫–∏ –∏–∑ Selenium.
    –ü–æ–ª—É—á–∞–µ—Ç –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ Content-Disposition –ø—Ä–∏ –ø–µ—Ä–≤–æ–º GET.
    """
    # 1. –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É
    download_btn = all_elems["download_btn"]
    href = download_btn.get_attribute("href")
    
    # 2. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–µ—Å—Å–∏—é —Å –∫—É–∫–∞–º–∏
    session = requests.Session()
    for cookie in driver.get_cookies():
        session.cookies.set(cookie['name'], cookie['value'])

    # 3. –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ URL –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
    filename = "model.safetensors"
    path = urlparse(href).path
    if path:
        filename = os.path.basename(path) or filename
    if not filename.endswith(('.safetensors', '.ckpt', '.pt', '.bin')):
        filename += ".safetensors"

    # 4. –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
    file_path = os.path.join(download_path, filename)

    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
    if os.path.isfile(file_path):
        print(f"‚úÖ –§–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {file_path}")
        return True

    # 6. –ü—Ä–æ–±—É–µ–º GET-–∑–∞–ø—Ä–æ—Å (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º HEAD)
    try:
        print("Cookies:", session.cookies.get_dict())
        print(f"üì• –ü–æ–ø—ã—Ç–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {filename}")
        response = session.get(href, stream=True, allow_redirects=True)
        
        if response.status_code == 403:
            print("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –º–æ–¥–µ–ª—å —Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞.")
            return False
        elif response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}: {response.text[:200]}")
            return False

        # 7. –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ Content-Disposition
        new_filename = filename
        if "Content-Disposition" in response.headers:
            content_disp = response.headers["Content-Disposition"]
            if "filename*" in content_disp:
                new_filename = content_disp.split("filename*=")[1].split("'")[-1]
            elif "filename" in content_disp:
                new_filename = content_disp.split("filename=")[1].strip('"')
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç—å, –µ—Å–ª–∏ –∏–º—è –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
            if new_filename != filename:
                file_path = os.path.join(download_path, new_filename)

        # 8. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –≤–¥—Ä—É–≥ –ø–æ—Å–ª–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ —Ñ–∞–π–ª —É–∂–µ –µ—Å—Ç—å
        if os.path.isfile(file_path):
            print(f"‚úÖ –§–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–ø–æ—Å–ª–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞): {file_path}")
            return True

        # 9. –°–∫–∞—á–∏–≤–∞–µ–º
        with open(file_path, "wb") as f:
            for chunk in response.iter_content(chunk_size=8192):
                f.write(chunk)
        
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω: {file_path}")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {e}")
        return False